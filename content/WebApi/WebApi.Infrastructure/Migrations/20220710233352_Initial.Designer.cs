using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

// <auto-generated />
namespace WebApi.Infrastructure.Migrations
{
#if (postgre || mysql || sqlserver)
    [DbContext(typeof(WebApi.Infrastructure.Persistance.EntityContext))]
#endif
    [Migration("20220710233352_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
#if (postgre)
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.16")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", Npgsql.EntityFrameworkCore.PostgreSQL.Metadata.NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.Entity("WebApi.Application.Entities.OtherThing", b =>
            {
                b.Property<Guid>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("uuid")
                    .HasColumnName("id");

                b.Property<string>("Description")
                    .HasColumnType("text")
                    .HasColumnName("description");

                b.HasKey("Id")
                    .HasName("pk_other_things");

                b.ToTable("other_things");
            });

            modelBuilder.Entity("WebApi.Application.Entities.Something", b =>
            {
                b.Property<Guid>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("uuid")
                    .HasColumnName("id");

                b.Property<string>("Description")
                    .HasColumnType("text")
                    .HasColumnName("description");

                b.Property<Guid?>("OtherThingId")
                    .HasColumnType("uuid")
                    .HasColumnName("other_thing_id");

                b.HasKey("Id")
                    .HasName("pk_somethings");

                b.HasIndex("OtherThingId")
                    .HasDatabaseName("ix_somethings_other_thing_id");

                b.ToTable("somethings");
            });

            modelBuilder.Entity("WebApi.Application.Entities.Something", b =>
            {
                b.HasOne("WebApi.Application.Entities.OtherThing", "OtherThing")
                    .WithMany()
                    .HasForeignKey("OtherThingId")
                    .HasConstraintName("fk_somethings_other_things_other_thing_id");

                b.Navigation("OtherThing");
            });
#endif
#if (mysql)
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.16");

            modelBuilder.Entity("WebApi.Application.Entities.OtherThing", b =>
            {
                b.Property<byte[]>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("varbinary(16)")
                    .HasColumnName("id");

                b.Property<string>("Description")
                    .HasColumnType("text")
                    .HasColumnName("description");

                b.HasKey("Id")
                    .HasName("pk_other_things");

                b.ToTable("other_things");
            });

            modelBuilder.Entity("WebApi.Application.Entities.Something", b =>
            {
                b.Property<byte[]>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("varbinary(16)")
                    .HasColumnName("id");

                b.Property<string>("Description")
                    .HasColumnType("text")
                    .HasColumnName("description");

                b.Property<byte[]>("OtherThingId")
                    .HasColumnType("varbinary(16)")
                    .HasColumnName("other_thing_id");

                b.HasKey("Id")
                    .HasName("pk_somethings");

                b.HasIndex("OtherThingId")
                    .HasDatabaseName("ix_somethings_other_thing_id");

                b.ToTable("somethings");
            });

            modelBuilder.Entity("WebApi.Application.Entities.Something", b =>
            {
                b.HasOne("WebApi.Application.Entities.OtherThing", "OtherThing")
                    .WithMany()
                    .HasForeignKey("OtherThingId")
                    .HasConstraintName("fk_somethings_other_things_other_thing_id");

                b.Navigation("OtherThing");
            });
#endif
#if (sqlserver)
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.16")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("WebApi.Application.Entities.OtherThing", b =>
            {
                b.Property<Guid>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("uniqueidentifier")
                    .HasColumnName("id");

                b.Property<string>("Description")
                    .HasColumnType("nvarchar(max)")
                    .HasColumnName("description");

                b.HasKey("Id")
                    .HasName("pk_other_things");

                b.ToTable("other_things");
            });

            modelBuilder.Entity("WebApi.Application.Entities.Something", b =>
            {
                b.Property<Guid>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("uniqueidentifier")
                    .HasColumnName("id");

                b.Property<string>("Description")
                    .HasColumnType("nvarchar(max)")
                    .HasColumnName("description");

                b.Property<Guid?>("OtherThingId")
                    .HasColumnType("uniqueidentifier")
                    .HasColumnName("other_thing_id");

                b.HasKey("Id")
                    .HasName("pk_somethings");

                b.HasIndex("OtherThingId")
                    .HasDatabaseName("ix_somethings_other_thing_id");

                b.ToTable("somethings");
            });

            modelBuilder.Entity("WebApi.Application.Entities.Something", b =>
            {
                b.HasOne("WebApi.Application.Entities.OtherThing", "OtherThing")
                    .WithMany()
                    .HasForeignKey("OtherThingId")
                    .HasConstraintName("fk_somethings_other_things_other_thing_id");

                b.Navigation("OtherThing");
            });
#endif
#pragma warning restore 612, 618
        }
    }
}