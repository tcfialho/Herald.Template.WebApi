version: '3.4'

services:
    webapi.api:
        image: ${DOCKER_REGISTRY-}accountsapi
        environment:
            - ASPNETCORE_ENVIRONMENT=Development
            - MessageQueueOptions__HostName=rabbitmq
            - ConnectionStrings__DefaultConnection=Server=postgres;Port=5432;Database=postgres;User Id=admin;Password=password;
        ports:
            - "5000:80"
        build:
            context: .
            dockerfile: WebApi.Api/Dockerfile
        depends_on:
            - rabbitmq
            - rabbitmq-create-queues
        links: ["rabbitmq", "rabbitmq-create-queues"]

    rabbitmq:
        image: 'rabbitmq:3-management-alpine'
        hostname: rabbitmq
        environment:
            - RABBITMQ_DEFAULT_USER=myUserName
            - RABBITMQ_DEFAULT_PASS=myPassword
        ports:
            - '15672:15672'
            - '5672:5672'
        expose:
            - 15672
            - 5672

    postgres:
        image: postgres:12-alpine
        ports:
            - "15432:15432"
            - "5432:5432"
        environment:
            POSTGRES_USER: "admin"
            POSTGRES_PASSWORD: "password"

    rabbitmq-create-queues:
        image: activatedgeek/rabbitmqadmin:latest
        depends_on:
            - rabbitmq
        links: ["rabbitmq"]
        hostname: rabbitmq-create-queues
        entrypoint: /bin/sh -c
        command: >
            "
              while ! nc -z rabbitmq 5672; do echo waiting; sleep 3; done;
              rabbitmqadmin --host rabbitmq -umyUserName -pmyPassword declare exchange name=SentToQueueExchange type=fanout
              rabbitmqadmin --host rabbitmq -umyUserName -pmyPassword declare queue name=SentToQueueMessage durable=false
              rabbitmqadmin --host rabbitmq -umyUserName -pmyPassword declare binding source="SentToQueueExchange" destination="SentToQueueMessage" destination_type="queue"
              rabbitmqadmin --host rabbitmq -umyUserName -pmyPassword list queues
              echo 'RABBIT-DONE!' 
            "